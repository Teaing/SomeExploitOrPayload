#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author:Tea

import poplib
import imaplib
import smtplib


class MyMailAuth(object):

    def __init__(self, serverIP, serverPort, isSSL, deBug=0, timeOut=3):
        self.serverIP = serverIP
        self.serverPort = serverPort
        self.isSSL = isSSL
        self.deBug = deBug
        self.timeOut = timeOut
        self.emailName = ''
        self.emailPass = ''
        # print '{0}\t{1}'.format('Port', self.serverPort)

    def getAuthInfo(self):
        if self.emailName or self.emailPass:
            print '{0}\t{1} Found!'.format(self.emailName, self.emailPass)
            return self.emailName, self.emailPass


class MySMTP(MyMailAuth):

    def __init__(self, serverIP, serverPort=465, isSSL=True, deBug=0):
        super(MySMTP, self).__init__(serverIP, serverPort, isSSL, deBug)
        self.serverPort = self.serverPort if self.isSSL else 25  # SSL 可以换端口
        if self.isSSL:
            self.mail = smtplib.SMTP_SSL(self.serverIP, self.serverPort, timeout=self.timeOut)
        else:
            self.mail = smtplib.SMTP(self.serverIP, self.serverPort, timeout=self.timeOut)
        self.mail.set_debuglevel(self.deBug)

    def auth(self, emailName, emailPass):
        try:
            self.mail.login(emailName, emailPass)
            self.emailName, self.emailPass = emailName, emailPass
            self.mail.quit()
        except smtplib.SMTPAuthenticationError, e:
            pass


class MyPOP3(MyMailAuth):
    def __init__(self, serverIP, serverPort=995, isSSL=True, deBug=0, timeOut=3):
        super(MyPOP3, self).__init__(serverIP, serverPort, isSSL, deBug, timeOut)
        self.serverPort = serverPort if isSSL else 110  # SSL 可以换端口
        if self.isSSL:
            self.mail = poplib.POP3_SSL(self.serverIP, self.serverPort)  # python3 才有timeout
            print 'POP3 SSL timeout setting Failure...'
        else:
            self.mail = poplib.POP3(self.serverIP, self.serverPort, timeout=self.timeOut)
        self.mail.set_debuglevel(self.deBug)

    def auth(self, emailName, emailPass):
        try:
            self.mail.user(emailName)
            self.mail.pass_(emailPass)
            self.emailName, self.emailPass = emailName, emailPass
            self.mail.quit()
        except poplib.error_proto, e:
            pass


class MyIMAP(MyMailAuth):
    def __init__(self, serverIP, serverPort=993, isSSL=True):
        super(MyIMAP, self).__init__(serverIP, serverPort, isSSL)
        self.serverPort = serverPort if isSSL else 143  # SSL 可以换端口
        if self.isSSL:
            self.mail = imaplib.IMAP4_SSL(self.serverIP, self.serverPort)
        else:
            self.mail = imaplib.IMAP4(self.serverIP, self.serverPort)

    def auth(self, emailName, emailPass):
        try:
            self.mail.login(emailName, emailPass)
            self.mail.close()
            self.emailName, self.emailPass = emailName, emailPass
        except Exception, e:
            pass


def main():
    myAuth = MyPOP3('pop3.pop.com')
    myAuth.auth('admin@pop.com', 'admin888')
    myAuth.getAuthInfo()


if __name__ == '__main__':
    main()
